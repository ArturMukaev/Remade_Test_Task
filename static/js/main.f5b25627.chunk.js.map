{"version":3,"sources":["redux/types.js","components/Worker.js","redux/actions.js","components/WorkersList.js","components/WorkersForm.js","App.js","reportWebVitals.js","redux/workersReducer.js","redux/rootReducer.js","index.js"],"names":["ADD_WORKER","CHANGE_WORKER","SET_WORKER","DELETE_WORKER","mapDispatchToProps","setWorker","worker","type","payload","connect","str","selected","className","onClick","name","position","gender","birth","parts","split","toString","setDate","working","state","workers","map","el","id","addWorker","deleteWorker","_id","changeWorker","activeWorker","props","useState","count","setCount","useStateWithCallbackLazy","human","setHuman","useEffect","currentHuman","check1","current","checked","check2","check3","useRef","changeHandler","event","target","value","onSubmit","preventDefault","trim","alert","onInput","ref","defaultValue","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","concat","filter","store","createStore","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5b25627.chunk.js","sourcesContent":["export const ADD_WORKER = 'ADD_WORKER';\r\nexport const CHANGE_WORKER = 'CHANGE_WORKER';\r\nexport const SET_WORKER = 'SET_WORKER';\r\nexport const DELETE_WORKER = 'DELETE_WORKER';","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {setWorker} from \"../redux/actions\";\r\n\r\n\r\n\r\nconst Worker = ({worker,setWorker}) =>{ // Рендерит карточку работника\r\n\r\n    // Присваем стиль выделения в зависимости от выбранного работника\r\n    let colored = worker.selected?\"selected\":\"not_selected\";\r\n    let str = \"card \"+colored;\r\n\r\n\r\n    const setDate = () => { // превращает дату в формат dd.mm.yyyy\r\n        if (worker.birth) {\r\n            let parts = worker.birth.split(\"-\")\r\n            return (parts[2].toString() + \".\" + parts[1].toString() + \".\" + parts[0].toString());\r\n        } else {\r\n            return  \"\"\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className={str} onClick={() =>{setWorker(worker)}}>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">ФИО: {worker.name}</h5>\r\n                <h6 className=\"card-subtitle mb-2 text-muted\">Должность: {worker.position}</h6>\r\n                <div className=\"card-text\">\r\n                    <p>Пол: {worker.gender}</p>\r\n                    <p>Дата рождения: {setDate()}</p>\r\n                    <p>Уволен: {worker.working}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    setWorker\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Worker)","import {ADD_WORKER,CHANGE_WORKER,SET_WORKER,DELETE_WORKER} from './types'\r\n\r\nexport function addWorker(worker){\r\n    return{\r\n        type: ADD_WORKER,\r\n        payload: worker\r\n    }\r\n}\r\nexport function deleteWorker(_id){\r\n    return{\r\n        type: DELETE_WORKER,\r\n        payload: _id\r\n    }\r\n}\r\nexport function changeWorker(worker){\r\n    return{\r\n        type: CHANGE_WORKER,\r\n        payload: worker\r\n    }\r\n}\r\nexport function setWorker(worker){\r\n    return{\r\n        type: SET_WORKER,\r\n        payload: worker\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Worker from \"./Worker\";\r\n\r\n\r\nconst WorkersList = ({workers}) => { // Рендерит массив работников\r\n\r\n    return (\r\n        <>\r\n            {workers.map(el => (\r\n                 <Worker worker={el} key={el.id}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        workers: state.workers.workers\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(WorkersList)","import React, {useEffect, useState, useRef} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {addWorker, changeWorker, deleteWorker} from \"../redux/actions\";\r\nimport {useStateWithCallbackLazy} from 'use-state-with-callback';\r\n\r\nconst WorkersForm = (props) => { // \"Карточка работника\" для изменения данных о нем или добавления нового работника\r\n    const [count, setCount] = useState(1);\r\n    const [human, setHuman] = useStateWithCallbackLazy(props.worker);\r\n\r\n\r\n    useEffect(() => { // Обновляем состояние при изменении активного работника (props.worker)\r\n        setHuman(props.worker, (currentHuman) => {\r\n            switch (currentHuman.gender) { // Устанавливаем правильные чекбоксы\r\n                case \"мужской\":\r\n                    check1.current.checked = true;\r\n                    check2.current.checked = false;\r\n                    break;\r\n                case \"женский\":\r\n                    check2.current.checked = true;\r\n                    check1.current.checked = false;\r\n                    break;\r\n                default:\r\n                    check2.current.checked = false;\r\n                    check1.current.checked = false;\r\n                    break;\r\n            }\r\n            if (currentHuman.working === \"да\") {\r\n                check3.current.checked = true;\r\n            } else {\r\n                check3.current.checked = false;\r\n            }\r\n        });\r\n    }, [props.worker, setHuman]);\r\n\r\n    // Для управления чекбоксами\r\n    const check1 = useRef(null);\r\n    const check2 = useRef(null);\r\n    const check3 = useRef(null);\r\n\r\n\r\n    const changeHandler = event => { // Функция для изменения состояния при вводе пользователя\r\n        if (event.target.name === \"working\") {\r\n            setHuman({...human, [event.target.name]: event.target.checked ? \"да\" : \"нет\"}, (currentHuman) => {\r\n                props.changeWorker(currentHuman); // Меняем активного работника\r\n            });\r\n        } else {\r\n            setHuman({...human, [event.target.name]: event.target.value}, (currentHuman) => {\r\n                props.changeWorker(currentHuman);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    const submitHandler = event => { // Функция для отправки формы (добавление нового сотрудника)\r\n        event.preventDefault();\r\n        if (!human.name.trim() || !human.position) {\r\n            alert(\"Не заполнены поле ФИО или должность!\");\r\n        } else {\r\n            props.addWorker({...human, id: count, selected: true});\r\n            setCount(count + 1);\r\n        }\r\n    }\r\n\r\n\r\n    const deleteHandler = event => { // Функция для удаления выбранного сотрдуника\r\n        props.deleteWorker(props.worker.id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={submitHandler}>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">ФИО</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        id=\"name\"\r\n                        value={human.name}\r\n                        name=\"name\"\r\n                        onInput={changeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label className=\"form-label\">Дата рождения</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        id=\"birth\"\r\n                        value={human.birth}\r\n                        name=\"birth\"\r\n                        onInput={changeHandler}\r\n                    />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Пол</label>\r\n                            <p><input\r\n                                name=\"gender\"\r\n                                className=\"form-check-input\"\r\n                                type=\"radio\"\r\n                                value=\"мужской\"\r\n                                ref={check1}\r\n                                id=\"gender1\"\r\n                                onInput={changeHandler}\r\n                            /> Мужской\r\n                                <br/><input\r\n                                    name=\"gender\"\r\n                                    className=\"form-check-input\"\r\n                                    type=\"radio\"\r\n                                    id=\"gender2\"\r\n                                    value=\"женский\"\r\n                                    ref={check2}\r\n                                    onInput={changeHandler}\r\n                                /> Женский</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"mb-3 form-check mt\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                id=\"working\"\r\n                                name=\"working\"\r\n                                value=\"да\"\r\n                                ref={check3}\r\n                                onInput={changeHandler}\r\n                            />\r\n                            <label className=\"form-check-label\">Уволен</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-group mb-3\">\r\n                    <label className=\"form-label mr\">Должность</label>\r\n                    <select className=\"form-select\" aria-label=\"Default select example\"\r\n                            id=\"position\"\r\n                            name=\"position\"\r\n                            value={human.position}\r\n                            onInput={changeHandler}>\r\n                        <option defaultValue disabled/>\r\n                        <option value=\"Аналитик\">Аналитик</option>\r\n                        <option value=\"Frontend разработчик\">Frontend разработчик</option>\r\n                        <option value=\"Backend разработчик\">Backend разработчик</option>\r\n                        <option value=\"Преподаватель\">Преподаватель</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" id=\"add\" className=\"btn btn-success fl\"\r\n                        disabled={props.worker.selected}>Добавить\r\n                </button>\r\n            </form>\r\n            <button id=\"delete\" className=\"btn btn-danger ml\" onClick={deleteHandler}\r\n                    disabled={!props.worker.selected}>Удалить\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        worker: state.workers.activeWorker\r\n    }\r\n}\r\nconst mapDispatchToProps =\r\n    {\r\n        addWorker,\r\n        deleteWorker,\r\n        changeWorker\r\n    }\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WorkersForm)","import React from \"react\";\nimport WorkersList from \"./components/WorkersList\";\nimport WorkersForm from \"./components/WorkersForm\";\n\nfunction App() {\n  return (\n   <div className=\"container\">\n       <div className=\"row\">\n           <div className=\"col\">\n               <h1>Список сотрудников</h1>\n               <WorkersList/>\n           </div>\n           <div className=\"col\">\n               <h1>Карточка сотрудника</h1>\n               <WorkersForm/>\n           </div>\n       </div>\n   </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {ADD_WORKER,CHANGE_WORKER,SET_WORKER,DELETE_WORKER} from \"./types\";\r\n\r\nconst initialState = { // начальное состояние\r\n    workers: [{\r\n        name: \"Мукаев Артур Салаватович\",\r\n        birth: \"2001-05-24\",\r\n        gender: \"мужской\",\r\n        working: \"нет\",\r\n        position: \"Frontend разработчик\",\r\n        id: 0,\r\n        selected: false\r\n    }],\r\n    activeWorker: {\r\n        name: \"\",\r\n        birth:\"\",\r\n        gender: \"\",\r\n        working: \"нет\",\r\n        position: \"\",\r\n        selected: false\r\n    }\r\n}\r\n\r\nexport const workersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_WORKER:  // Добавление нового сотрудника\r\n            return {\r\n                workers: state.workers.concat(action.payload),\r\n                activeWorker: {...action.payload,selected:true}\r\n            }\r\n        case DELETE_WORKER:  // Удаление сотрудника\r\n            return {\r\n                workers: state.workers.filter(worker => worker.id !== action.payload),\r\n                activeWorker: initialState.activeWorker\r\n            }\r\n        case SET_WORKER: // Установка сотрудника активным\r\n            return {\r\n                workers: state.workers.map(el=>{\r\n                    if(el.id === action.payload.id){\r\n                        return {...el,selected: !el.selected};\r\n                    }\r\n                    return {...el,selected: false};\r\n                }),\r\n                activeWorker: action.payload.selected? initialState.activeWorker: {...action.payload,selected: true}\r\n            }\r\n        case CHANGE_WORKER: // Изменение активного сотрудника\r\n            return {\r\n                workers: state.workers.map(el=>{\r\n                    if(el.id === action.payload.id){\r\n                        return action.payload\r\n                    }\r\n                    return el\r\n                }),\r\n                activeWorker: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {workersReducer} from \"./workersReducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    workers: workersReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from \"redux\";\nimport {rootReducer} from \"./redux/rootReducer\";\nimport {Provider} from 'react-redux'\nimport './styles.css'\n\n\nconst store = createStore(rootReducer);\n\n\nconst app = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n)\n\n\nReactDOM.render(\n  <React.StrictMode>\n      {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}